{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","startBTN","querySelector","gameScore","isWinMessage","loseMessage","messageStart","isWin","rowsCount","cellsCount","score","gameBoard","addEventListener","e","startGame","target","classList","contains","remove","add","innerHTML","generateRandomNumber","row","Math","floor","random","cell","renderGameField","field","gameFieldIndex","i","j","fieldValue","updateScore","isGameOver","replace","moveCell","gameField","directionI","directionJ","newI","currI","currJ","newJ","className","moveUp","mergeUp","moveDown","mergeDown","moveLeft","mergeLeft","moveRight","mergeRight","hasEmpyCell","gameFields","key"],"mappings":";AAAA,aAsPA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnPA,IAAMA,EAAQC,SAASC,iBAAiB,eAClCC,EAAWF,SAASG,cAAc,UAClCC,EAAYJ,SAASG,cAAc,eACnCE,EAAeL,SAASG,cAAc,gBACtCG,EAAcN,SAASG,cAAc,iBACrCI,EAAeP,SAASG,cAAc,kBAExCK,GAAQ,EACNC,EAAY,EACZC,EAAa,EACfC,EAAQ,EAERC,EAAY,CACd,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGZV,EAASW,iBAAiB,QAAS,SAACC,GAClCC,IAEID,EAAEE,OAAOC,UAAUC,SAAS,WAC9BJ,EAAEE,OAAOC,UAAUE,OAAO,SAC1BL,EAAEE,OAAOC,UAAUG,IAAI,WACvBN,EAAEE,OAAOK,UAAY,WAGvBd,EAAaU,UAAUG,IAAI,UAC3Bf,EAAaY,UAAUG,IAAI,UAC3Bd,EAAYW,UAAUG,IAAI,YAG5B,IAAME,EAAuB,WACrBC,IAAAA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWjB,GACjCkB,EAAOH,KAAKC,MAAMD,KAAKE,SAAWhB,GAEX,IAAzBE,EAAUW,GAAKI,KACjBf,EAAUW,GAAKI,GAASH,KAAKE,UAAY,GAAO,EAAI,IAIlDE,EAAkB,SAACC,GACnBC,IAD6B,EAC7BA,EAAiB,EAEF/B,EAAAA,EAAAA,GAHc,IAGP,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAf4B,IAAAA,EAAe,EAAA,MAClBI,EAAIP,KAAKC,MAAMK,EAAiBrB,GAChCuB,EAAIF,EAAiBpB,EAErBuB,EAAarB,EAAUmB,GAAGC,GAEhCF,IAEwB,IAApBlB,EAAUmB,GAAGC,IACfL,EAAKN,UAAY,GACjBM,EAAKV,UAAY,eAEjBU,EAAKN,UAAYT,EAAUmB,GAAGC,GAC9BL,EAAKV,UAAUG,IAAmBa,eAAAA,OAAAA,KAGjB,OAAfA,IACFzB,GAAQ,GAGNA,GACFH,EAAaY,UAAUE,OAAO,WAxBD,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA4BjCe,IAEIC,EAAWvB,KACTV,EAASe,UAAUC,SAAS,aAC9BhB,EAASe,UAAUmB,QAAQ,UAAW,SACtClC,EAASmB,UAAY,SAGvBf,EAAYW,UAAUE,OAAO,YAI3Be,EAAc,WAClB9B,EAAUiB,UAAYV,GAGlB0B,EAAW,SAACC,EAAWP,EAAGC,EAAGO,EAAYC,GAQ3CC,IAPEC,IAAAA,EAAQX,EACRY,EAAQX,EAERS,EAAOC,EAAQH,EACfK,EAAOD,EAAQH,EAGjBC,GAAQ,GACLA,EAAO,GACPG,GAAQ,GACRA,EAAO,IACNN,EAAUG,GAAMG,IAEpBN,EAAUG,GAAMG,GAAQN,EAAUI,GAAOC,GACzCL,EAAUI,GAAOC,GAAS,EAE1BL,EAAUI,GAAOG,UAAY,GAE7BH,EAAQD,EACRE,EAAQC,EAERH,GAAQF,EACRK,GAAQJ,GAINM,EAAS,SAACR,GACT,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC9BK,EAASC,EAAWP,EAAGC,GAAI,EAAG,IAK9Be,EAAU,SAACT,GACV,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAY,EAAGsB,IAC5B,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC1BM,EAAUP,GAAGC,KAAOM,EAAUP,EAAI,GAAGC,KACvCM,EAAUP,GAAGC,GAAuB,EAAlBM,EAAUP,GAAGC,GAC/BrB,GAAS2B,EAAUP,GAAGC,GACtBM,EAAUP,EAAI,GAAGC,GAAK,IAMxBgB,EAAW,SAACV,GACX,IAAA,IAAIP,EAAItB,EAAWsB,GAAK,EAAGA,IACzB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC9BK,EAASC,EAAWP,EAAGC,EAAG,EAAG,IAK7BiB,EAAY,SAACX,GACZ,IAAA,IAAIP,EAAItB,EAAY,EAAGsB,EAAI,EAAGA,IAC5B,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC1BM,EAAUP,GAAGC,KAAOM,EAAUP,EAAI,GAAGC,KACvCM,EAAUP,GAAGC,GAAuB,EAAlBM,EAAUP,GAAGC,GAC/BrB,GAAS2B,EAAUP,GAAGC,GACtBM,EAAUP,EAAI,GAAGC,GAAK,IAMxBkB,EAAW,SAACZ,GACX,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC9BK,EAASC,EAAWP,EAAGC,EAAG,GAAI,IAK9BmB,EAAY,SAACb,GACZ,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC1BM,EAAUP,GAAGC,KAAOM,EAAUP,GAAGC,EAAI,KACvCM,EAAUP,GAAGC,GAAuB,EAAlBM,EAAUP,GAAGC,GAC/BrB,GAAS2B,EAAUP,GAAGC,GACtBM,EAAUP,GAAGC,EAAI,GAAK,IAMxBoB,EAAY,SAACd,GACZ,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAItB,EAAa,EAAGsB,GAAK,EAAGA,IACnCK,EAASC,EAAWP,EAAGC,EAAG,EAAG,IAK7BqB,EAAa,SAACf,GACb,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAItB,EAAa,EAAGsB,GAAK,EAAGA,IAC/BM,EAAUP,GAAGC,KAAOM,EAAUP,GAAGC,EAAI,KACvCM,EAAUP,GAAGC,GAAuB,EAAlBM,EAAUP,GAAGC,GAC/BrB,GAAS2B,EAAUP,GAAGC,GACtBM,EAAUP,GAAGC,EAAI,GAAK,IAM9B,SAASsB,EAAYC,GACd,IAAA,IAAIxB,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC1BuB,GAAqB,IAArBA,EAAWxB,GAAGC,GACT,OAAA,EAKN,OAAA,EAGT,SAASG,EAAWG,GACdgB,GAAAA,EAAYhB,GACP,OAAA,EAGJ,IAAA,IAAIP,EAAI,EAAGA,EAAItB,EAAWsB,IACxB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAa,EAAGsB,IAC9BM,GAAAA,EAAUP,GAAGC,KAAOM,EAAUP,GAAGC,EAAI,GAChC,OAAA,EAKR,IAAA,IAAID,EAAI,EAAGA,EAAItB,EAAY,EAAGsB,IAC5B,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAYsB,IAC1BM,GAAAA,EAAUP,GAAGC,KAAOM,EAAUP,EAAI,GAAGC,GAChC,OAAA,EAKN,OAAA,EAGT,SAASjB,IACPJ,EAAQ,EAERC,EAAY,CACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGZU,IACAM,EAAgBhB,GAGlBZ,SAASa,iBAAiB,UAAW,SAACC,GAC5BA,OAAAA,EAAE0C,KACH,IAAA,UACHV,EAAOlC,GACPmC,EAAQnC,GACRkC,EAAOlC,GACP,MAEG,IAAA,YACHoC,EAASpC,GACTqC,EAAUrC,GACVoC,EAASpC,GACT,MAEG,IAAA,YACHsC,EAAStC,GACTuC,EAAUvC,GACVsC,EAAStC,GACT,MAEG,IAAA,aACHwC,EAAUxC,GACVyC,EAAWzC,GACXwC,EAAUxC,GAOdU,IACAM,EAAgBhB","file":"main.9de3368f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n// eslint-disable no-shadow\n\nconst cells = document.querySelectorAll('.field-cell');\nconst startBTN = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst isWinMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nlet isWin = false;\nconst rowsCount = 4;\nconst cellsCount = 4;\nlet score = 0;\n\nlet gameBoard = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nstartBTN.addEventListener('click', (e) => {\n  startGame();\n\n  if (e.target.classList.contains('start')) {\n    e.target.classList.remove('start');\n    e.target.classList.add('restart');\n    e.target.innerHTML = 'Restart';\n  }\n\n  messageStart.classList.add('hidden');\n  isWinMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n});\n\nconst generateRandomNumber = () => {\n  const row = Math.floor(Math.random() * rowsCount);\n  const cell = Math.floor(Math.random() * cellsCount);\n\n  if (gameBoard[row][cell] === 0) {\n    gameBoard[row][cell] = (Math.random() >= 0.5) ? 4 : 2;\n  }\n};\n\nconst renderGameField = (field) => {\n  let gameFieldIndex = 0;\n\n  for (const cell of cells) {\n    const i = Math.floor(gameFieldIndex / rowsCount);\n    const j = gameFieldIndex % cellsCount;\n\n    const fieldValue = gameBoard[i][j];\n\n    gameFieldIndex++;\n\n    if (gameBoard[i][j] === 0) {\n      cell.innerHTML = '';\n      cell.classList = 'field-cell';\n    } else {\n      cell.innerHTML = gameBoard[i][j];\n      cell.classList.add(`field-cell--${fieldValue}`);\n    }\n\n    if (fieldValue === 2048) {\n      isWin = true;\n    }\n\n    if (isWin) {\n      isWinMessage.classList.remove('hidden');\n    }\n  }\n\n  updateScore();\n\n  if (isGameOver(gameBoard)) {\n    if (startBTN.classList.contains('restart')) {\n      startBTN.classList.replace('restart', 'start');\n      startBTN.innerHTML = 'Start';\n    }\n\n    loseMessage.classList.remove('hidden');\n  }\n};\n\nconst updateScore = () => {\n  gameScore.innerHTML = score;\n};\n\nconst moveCell = (gameField, i, j, directionI, directionJ) => {\n  let currI = i;\n  let currJ = j;\n\n  let newI = currI + directionI;\n  let newJ = currJ + directionJ;\n\n  while (\n    newI >= 0\n    && newI < 4\n    && newJ >= 0\n    && newJ < 4\n    && !gameField[newI][newJ]\n  ) {\n    gameField[newI][newJ] = gameField[currI][currJ];\n    gameField[currI][currJ] = 0;\n\n    gameField[currI].className = '';\n\n    currI = newI;\n    currJ = newJ;\n\n    newI += directionI;\n    newJ += directionJ;\n  }\n};\n\nconst moveUp = (gameField) => {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < cellsCount; j++) {\n      moveCell(gameField, i, j, -1, 0);\n    }\n  }\n};\n\nconst mergeUp = (gameField) => {\n  for (let i = 0; i < rowsCount - 1; i++) {\n    for (let j = 0; j < cellsCount; j++) {\n      if (gameField[i][j] === gameField[i + 1][j]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i + 1][j] = 0;\n      }\n    }\n  }\n};\n\nconst moveDown = (gameField) => {\n  for (let i = rowsCount; i >= 0; i--) {\n    for (let j = 0; j < cellsCount; j++) {\n      moveCell(gameField, i, j, 1, 0);\n    }\n  }\n};\n\nconst mergeDown = (gameField) => {\n  for (let i = rowsCount - 1; i > 0; i--) {\n    for (let j = 0; j < cellsCount; j++) {\n      if (gameField[i][j] === gameField[i - 1][j]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i - 1][j] = 0;\n      }\n    }\n  }\n};\n\nconst moveLeft = (gameField) => {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < cellsCount; j++) {\n      moveCell(gameField, i, j, 0, -1);\n    }\n  }\n};\n\nconst mergeLeft = (gameField) => {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < cellsCount; j++) {\n      if (gameField[i][j] === gameField[i][j + 1]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i][j + 1] = 0;\n      }\n    }\n  }\n};\n\nconst moveRight = (gameField) => {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = cellsCount - 1; j >= 0; j--) {\n      moveCell(gameField, i, j, 0, 1);\n    }\n  }\n};\n\nconst mergeRight = (gameField) => {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = cellsCount - 1; j >= 0; j--) {\n      if (gameField[i][j] === gameField[i][j - 1]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i][j - 1] = 0;\n      }\n    }\n  }\n};\n\nfunction hasEmpyCell(gameFields) {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < cellsCount; j++) {\n      if (gameFields[i][j] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction isGameOver(gameField) {\n  if (hasEmpyCell(gameField)) {\n    return false;\n  }\n\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < cellsCount - 1; j++) {\n      if (gameField[i][j] === gameField[i][j + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let i = 0; i < rowsCount - 1; i++) {\n    for (let j = 0; j < cellsCount; j++) {\n      if (gameField[i][j] === gameField[i + 1][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction startGame() {\n  score = 0;\n\n  gameBoard = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  generateRandomNumber();\n  renderGameField(gameBoard);\n}\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      moveUp(gameBoard);\n      mergeUp(gameBoard);\n      moveUp(gameBoard);\n      break;\n\n    case 'ArrowDown':\n      moveDown(gameBoard);\n      mergeDown(gameBoard);\n      moveDown(gameBoard);\n      break;\n\n    case 'ArrowLeft':\n      moveLeft(gameBoard);\n      mergeLeft(gameBoard);\n      moveLeft(gameBoard);\n      break;\n\n    case 'ArrowRight':\n      moveRight(gameBoard);\n      mergeRight(gameBoard);\n      moveRight(gameBoard);\n      break;\n\n    default:\n      break;\n  }\n\n  generateRandomNumber();\n  renderGameField(gameBoard);\n});\n"]}